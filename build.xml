<!--===========================================================================
  This is the build file for the Community Charting Components Plugin project.

  This build file will use the subfloor.xml and subfloor-js files as the
  default build process and should only override the tasks that need to differ
  from the common build file.

  See subfloor.xml and subfloor-js.xml for more details
============================================================================-->

<project name="CCC" basedir="." default="default">

    <description>
        This build file is used to create the CCC project
        and works with the subfloor.xml file.
    </description>

    <property name="js.module.script.dir" value="bin/stage"/>

    <!-- Import the subfloor-js.xml file which contains all the default ant targets -->
    <import file="build-res/subfloor-js.xml"/>

    <!-- ant files for each ccc module-->
    <import file="build-res/build.def.xml" />
    <import file="build-res/build.cgf.xml" />
    <import file="build-res/build.cdo.xml" />
    <import file="build-res/build.pvc.xml" />
    <import file="build-res/build.protovis.xml" />
    <import file="build-res/build.protovis-msie.xml" />
    <import file="build-res/build.tipsy.xml" />
    <import file="build-res/build.jquery.tipsy.xml" />


    <!-- location to expand the zipped contents of js dependencies (to be available for testing) -->
    <property name="js.expanded.lib.dir" value="package-res/resources/web/app/lib"/>
    <property name="js.source.dir" value="package-res/resources/web/app/js"/>
    <property name="js.requires.node" value="true"/>
    <property name="js.requires.karma" value="true"/>
    <property name="js.karma.config" value="karma.ci.conf.js"/>
    <property environment="env"/>




    <!-- license header to prepend on all files -->
    <property name="license.js" value="build-res/partials/license.js" />

    <!-- r.js location -->
    <property name="rjs.path" value="node_modules/requirejs/bin/r.js"/>

    <!-- output locations for each ccc build -->
    <property name="ccc.dist" value="${stage.dir}/ccc" />
    <property name="pen.dist" value="${stage.dir}/pen" />
    <property name="amd.dist" value="${stage.dir}/amd" />

    <!-- main targets -->
    <target name="dist-ccc"
            description="Generates de ccc bundle for cdf" >
        <antcall target="dist-ccc-bundle">
            <param name="bundle" value="ccc"/>
        </antcall>
    </target>
    <target name="dist-pen"
            description="Generates de ccc bundle for pen" >
        <antcall target="dist-ccc-bundle">
            <param name="bundle" value="pen"/>
        </antcall>
    </target>
    <target name="dist-amd"
            description="Generates de ccc bundle for amd">
        <antcall target="dist-ccc-bundle">
            <param name="bundle" value="amd"/>
        </antcall>
    </target>

    <target name="dist-ccc-bundle" description="Generates de ccc bundle for a given version" >

        <antcall target="build-def-${bundle}"/>
        <antcall target="build-cdo-${bundle}"/>
        <antcall target="build-cgf-${bundle}"/>
        <antcall target="build-pvc-${bundle}"/>
        <antcall target="build-protovis-${bundle}"/>
        <antcall target="build-protovis-msie-${bundle}"/>
        <antcall target="build-tipsy-${bundle}"/>
        <antcall target="build-jquery.tipsy-${bundle}"/>

        <copy todir="${stage.dir}/ccc/${bundle}">
            <fileset dir="${bin.dir}/output"/>
        </copy>
        <delete dir="build-res/module-scripts"/>
        <delete dir="${bin.dir}/output"/>
    </target>

    <!-- assemble target override -->
    <target name="assemble" depends="npm-install,dist-ccc, dist-pen, dist-amd, dist-js" >
    </target>

    <target name="setup-minified-source" depends="install-antcontrib, npm-install">
        <copy todir="${stage.dir}/ccc/minified">
            <fileset dir="${stage.dir}/ccc/amd"/>
        </copy>
        
       <exec executable="jsmin" output="${stage.dir}/ccc/minified/pvc-min.js">
        <arg value="${stage.dir}/ccc/minified/pvc.js"/>               
       </exec>
       
    </target>

    <target name="delete-minified-source">
        <delete dir="${stage.dir}/ccc/minified" />
    </target>

  <target name="init">
    <mkdir dir="${classes.dir}" />
    <mkdir dir="${dist.dir}" />
    <mkdir dir="${lib.dir}" />
    <mkdir dir="${devlib.dir}" />
    <mkdir dir="${testlib.dir}" />
    <mkdir dir="${runtimelib.dir}" />
    <mkdir dir="${src.dir}"/>
    <mkdir dir="${dist.dir}"/>
    
  </target>


  <target name="publish" depends="dist, dist-source, setup-minified-source, test-js, delete-minified-source, publish-nojar">
  </target>
</project>
